{"version":3,"sources":["PodPicker.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","window","document","PodPicker","container","items","options","this","preTime","itemsIndex","seekingIndex","startTimeSet","isUndefined","throwError","ERROR_MSG","param_container","isString","getElementById","type_container","elem_container","param_items","isArray","empty_items","type_items","isObject","type_options","that","sort","pre","next","convertTime","start","setup","value","setOptions","currentSrcInterval","setInterval","currentSrc","audioElem","clearInterval","match","format_audioFile","createTimeline","type_options_audioElem","timelineColor","isHexColor","type_value_options_timelineColor","type_options_timelineColor","isShowStartTime","isBoolean","type_options_isShowStartTime","getElementsByTagName","fragment","createDocumentFragment","timeline","createElement","pointer","ul","len","item","span","title","push","_item","addEventListener","play","currentTime","setTimeout","className","appendChild","createTextNode","style","color","id","Math","abs","setPointerPosition","pause","clearTimeout","removeAttribute","index","getElementsByClassName","item_h","offsetHeight","children","item_len","top","timeString","isTimeString","format_start","timeArray","split","type","msg","Error","constructor","Array","test","get"],"mappings":"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","file":"PodPicker.min.js","sourcesContent":["/*!\n * Pod Picker - A Podcast Timeline Generator\n * https://github.com/RoberMac/PodPicker\n *\n * Copyright (c) 2015 RoberTu <robertu0717@gmail.com>\n * @license MIT\n * @version v0.2.3\n */\n\n'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n;(function (window, document) {\n\n    'use strict';\n\n    var PodPicker = (function () {\n        /**\n         *\n         * @constructor\n         * @this  {PodPicker}\n         * @param {String}    container  Wrapper element's id\n         * @param {Array}     items      Data items\n         * @param {Object}    options    Options\n         *\n         */\n\n        function PodPicker(container, items, options) {\n            _classCallCheck(this, PodPicker);\n\n            // init\n            this.preTime = 0;\n            this.itemsIndex = 0;\n            this.seekingIndex = 0;\n            this.startTimeSet = [];\n\n            /**\n              * Basic Check\n              * throw an error if the parameters is invalid\n              *\n              */\n            // Check `container` parameter\n            PodPicker.isUndefined(container) ? PodPicker.throwError('default', PodPicker.ERROR_MSG.param_container) : PodPicker.isString(container) ? this.container = document.getElementById(container) : PodPicker.throwError('type', PodPicker.ERROR_MSG.type_container);\n\n            !this.container ? PodPicker.throwError('default', PodPicker.ERROR_MSG.elem_container) : null;\n\n            // Check `items` parameter\n            PodPicker.isUndefined(items) ? PodPicker.throwError('default', PodPicker.ERROR_MSG.param_items) : PodPicker.isArray(items) ? items.length <= 0 ? PodPicker.throwError('default', PodPicker.ERROR_MSG.empty_items) : null : PodPicker.throwError('type', PodPicker.ERROR_MSG.type_items);\n\n            // Check `options` parameter\n            !PodPicker.isUndefined(options) && !PodPicker.isObject(options) ? PodPicker.throwError('type', PodPicker.ERROR_MSG.type_options) : this.options = options || {};\n\n            // Sort items array by item object\n            var that = this;\n            this.items = items.sort(function (pre, next) {\n\n                var pre = that.convertTime(pre.start),\n                    next = that.convertTime(next.start);\n\n                if (pre > next) {\n                    return 1;\n                } else if (pre < next) {\n                    return -1;\n                } else {\n                    return 0;\n                }\n            });\n            this.setup();\n        }\n\n        /**\n         * Setup\n         */\n\n        _createClass(PodPicker, [{\n            key: 'setup',\n            value: function setup() {\n                var that = this;\n\n                this.setOptions();\n\n                /**\n                 * Check `audioElem` source file, throw error if audio file is MP3 file format\n                 *\n                 * For more details, see: \n                 *   http://forums.codescript.in/javascript/html5-audio-currenttime-attribute-inaccurate-27606.html\n                 *   https://jsfiddle.net/yp3o8cyw/2/\n                 *\n                 */\n                var currentSrcInterval = setInterval(function () {\n                    var currentSrc = that.audioElem.currentSrc;\n                    if (currentSrc) {\n                        clearInterval(currentSrcInterval);\n                        currentSrc.match(/\\.mp3/i) ? that.throwError('default', PodPicker.ERROR_MSG.format_audioFile) : that.createTimeline();\n                    }\n                }, 10);\n            }\n\n            /**\n             * Set Options\n             *\n             */\n        }, {\n            key: 'setOptions',\n            value: function setOptions() {\n                var options = this.options;\n\n                // Allow options: 'audioElem', 'timelineColor', 'isShowStartTime'\n                // Check option: 'audioElem'\n                !PodPicker.isUndefined(options.audioElem) && !PodPicker.isString(options.audioElem) ? PodPicker.throwError('type', PodPicker.ERROR_MSG.type_options_audioElem) : null;\n\n                // Check option: 'timelineColor'\n                !PodPicker.isUndefined(options.timelineColor) ? !PodPicker.isString(options.timelineColor) ? PodPicker.throwError('type', PodPicker.ERROR_MSG.type_options_timelineColor) : PodPicker.isHexColor(options.timelineColor) ? null : PodPicker.throwError('type', PodPicker.ERROR_MSG.type_value_options_timelineColor) : null;\n\n                // Check option: 'isShowStartTime'\n                !PodPicker.isUndefined(options.isShowStartTime) && !PodPicker.isBoolean(options.isShowStartTime) ? PodPicker.throwError('type', PodPicker.ERROR_MSG.type_options_isShowStartTime) : null;\n\n                // Set options\n                this.audioElem = options.audioElem ? document.getElementById(options.audioElem) : document.getElementsByTagName('audio')[0];\n                this.timelineColor = options.timelineColor || '#CECECF';\n                this.isShowStartTime = options.isShowStartTime;\n            }\n\n            /**\n             * Create the timeline element and then append it to `container` element\n             *\n             */\n        }, {\n            key: 'createTimeline',\n            value: function createTimeline() {\n                var that = this,\n                    items = this.items,\n                    audioElem = this.audioElem,\n                    timelineColor = this.timelineColor,\n                    isShowStartTime = this.isShowStartTime;\n\n                var fragment = document.createDocumentFragment(''),\n                    timeline = document.createElement('div'),\n                    pointer = document.createElement('span'),\n                    ul = document.createElement('ul');\n\n                for (var i = 0, len = items.length; i < len; i++) {\n\n                    var item = document.createElement('li'),\n                        span = document.createElement('span'),\n                        start = this.convertTime(items[i].start),\n                        title = isShowStartTime ? items[i].start + ' - ' + items[i].title : items[i].title;\n\n                    // Extract all `item` start time and then push it to `this.startTimeSet`\n                    this.startTimeSet.push(start);(function (_item, start) {\n                        // Jump to certain time offsets in `audioElem`\n                        // when user click the item > span element\n                        _item.addEventListener('click', function () {\n                            audioElem.play();\n                            audioElem.currentTime = start;\n                            that.seekingIndex = window.setTimeout(function () {\n                                document.getElementById('pp-pointer').className = 'seeking';\n                            }, 500);\n                        });\n                    })(span, start);\n\n                    item.className = 'pp-item';\n                    span.appendChild(document.createTextNode(title));\n                    item.appendChild(span);\n                    ul.appendChild(item);\n                }\n\n                ul.style.color = timelineColor;\n                pointer.id = 'pp-pointer';\n                timeline.id = 'pp-timeline';\n                timeline.appendChild(ul);\n                timeline.appendChild(pointer);\n                fragment.appendChild(timeline);\n                this.container.appendChild(fragment);\n\n                // Register event handlers to `audioElem` element\n                audioElem.addEventListener('timeupdate', function () {\n                    // init\n                    var currentTime = audioElem.currentTime,\n                        startTimeSet = that.startTimeSet,\n                        len = startTimeSet.length;\n\n                    if (Math.abs(that.preTime - currentTime) > 1) {\n                        // user-triggered\n                        for (var i = 0; i < len; i++) {\n                            startTimeSet[i + 1] // the last one\n                            ? currentTime >= startTimeSet[i] && currentTime <= startTimeSet[i + 1] ? that.setPointerPosition(i + 1) : null : currentTime >= startTimeSet[i] ? that.setPointerPosition(i + 1) : null;\n                        }\n                    } else {\n                        // auto-triggered\n                        for (var i = 0; i < len; i++) {\n                            currentTime > startTimeSet[i] - 1 && currentTime <= startTimeSet[i] + 1 && that.itemsIndex !== i + 1 ? that.setPointerPosition(i + 1) : null;\n                        }\n                    }\n\n                    that.preTime = currentTime;\n                });\n                // Seeking\n                audioElem.addEventListener('seeking', function () {\n                    audioElem.pause();\n                });\n                // Seeked\n                audioElem.addEventListener('seeked', function () {\n                    window.clearTimeout(that.seekingIndex);\n                    audioElem.play();\n                    document.getElementById('pp-pointer').removeAttribute('class');\n                });\n            }\n\n            /**\n             * Set or reset timeline pointer position\n             *\n             * @param {Number} index  Current pointer position\n             */\n        }, {\n            key: 'setPointerPosition',\n            value: function setPointerPosition(index) {\n                var item = document.getElementsByClassName('pp-item'),\n                    pointer = document.getElementById('pp-pointer'),\n                    item_h = item[0].offsetHeight;\n\n                // Store current item(Section) index\n                this.itemsIndex = index;\n                // Set timeline section style\n                item[index - 1].children[0].className = 'currentSection';\n                for (var i = 0, item_len = item.length; i < item_len; i++) {\n                    i !== index - 1 ? item[i].children[0].removeAttribute('class') : null;\n                }\n                // Set timeline pointer position\n                pointer.style.top = index * item_h - item_h / 2 - 6 + 'px';\n            }\n\n            /**\n             * Convert time string to seconds\n             *\n             * @param {String} timeString  A time string \n             */\n        }, {\n            key: 'convertTime',\n            value: function convertTime(timeString) {\n                // Check time string\n                PodPicker.isTimeString(timeString) ? null : PodPicker.throwError('default', PodPicker.ERROR_MSG.format_start);\n\n                var timeArray = timeString.split(':'),\n                    len = timeArray.length;\n\n                switch (len) {\n\n                    case 1:\n                        return timeArray[0] * 1;\n                        break;\n                    case 2:\n                        return timeArray[0] * 60 + timeArray[1] * 1;\n                        break;\n                    case 3:\n                        return timeArray[0] * 60 * 60 + timeArray[1] * 60 + timeArray[2] * 1;\n                        break;\n                    default:\n                        PodPicker.throwError('default', PodPicker.ERROR_MSG.format_start);\n                }\n            }\n\n            /**\n             * Error Messages\n             *\n             */\n        }], [{\n            key: 'throwError',\n\n            /**\n             * Throw Error\n             *\n             * @param {String} ERROR_MSG  Error message\n             */\n            value: function throwError(type, msg) {\n\n                switch (type) {\n\n                    case 'type':\n                        throw new TypeError(msg);\n                        break;\n                    default:\n                        throw new Error(msg);\n                        break;\n                }\n            }\n\n            /**\n             * Determines if a value is `undefined / string / boolean / array / object / hex color / timeString`\n             *\n             * @param {Any} value  The value need to be determined\n             */\n        }, {\n            key: 'isUndefined',\n            value: function isUndefined(value) {\n                return typeof value === 'undefined';\n            }\n        }, {\n            key: 'isString',\n            value: function isString(value) {\n                return typeof value === 'string';\n            }\n        }, {\n            key: 'isBoolean',\n            value: function isBoolean(value) {\n                return typeof value === 'boolean';\n            }\n        }, {\n            key: 'isArray',\n            value: function isArray(value) {\n                return value.constructor === Array;\n            }\n        }, {\n            key: 'isObject',\n            value: function isObject(value) {\n                return value.constructor === Object;\n            }\n        }, {\n            key: 'isHexColor',\n            value: function isHexColor(value) {\n                // via http://stackoverflow.com/a/8027444/3786947\n                return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(value);\n            }\n        }, {\n            key: 'isTimeString',\n            value: function isTimeString(value) {\n                return /^(?:(?:([01]?\\d|2[0-3]):)?([0-5]?\\d):)?([0-5]?\\d)$/.test(value);\n            }\n        }, {\n            key: 'ERROR_MSG',\n            get: function get() {\n                return {\n                    // `container` parameter\n                    param_container: 'Pod Picker: `container` parameter is required',\n                    type_container: 'Pod Picker: `container` parameter must be a string',\n                    elem_container: 'Pod Picker: `container` parameter is not related to an existing ID',\n                    // `items` parameter\n                    param_items: 'Pod Picker: `items` parameter is required',\n                    type_items: 'Pod Picker: `items` parameter must be an array',\n                    empty_items: 'Pod Picker: `items` parameter cannot be an empty array',\n                    // `options` parameter\n                    type_options: 'Pod Picker: `options` parameter must be an object',\n                    type_options_audioElem: 'Pod Picker: `options.audioElem` must be a string',\n                    type_options_timelineColor: 'Pod Picker: `options.timelineColor` must be a string',\n                    type_options_isShowStartTime: 'Pod Picker: `options.isShowStartTime` must be a boolean',\n                    type_value_options_timelineColor: 'Pod Picker: `options.timelineColor` must be a hex color',\n                    // others\n                    format_audioFile: 'Pod Picker: does not support MP3 file format',\n                    format_start: 'Pod Picker: `start` time string must be \"hh:mm:ss\", \"mm:ss\" or \"ss\" format'\n                };\n            }\n        }]);\n\n        return PodPicker;\n    })()\n\n    // Browser globals\n    ;\n\n    if (!window.PodPicker) {\n        window.PodPicker = PodPicker;\n    }\n})(window, document);\n\n// Register event handlers to `item` element"],"sourceRoot":"/source/"}