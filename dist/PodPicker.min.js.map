{"version":3,"sources":["PodPicker.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","window","document","isUndefined","value","isString","isBoolean","isArray","constructor","Array","isObject","isHexColor","test","isTimeString","throwError","type","msg","Error","ERROR_MSG","container_param","container_type","container_elem","items_param","items_type","items_empty","options_type","options_audioElem_type","options_timelineColor_type","options_isShowStartTime_type","options_timelineColor_type_value","audioFile_format","start_format","convertTime","timeString","timeArray","split","len","PodPicker","container","items","options","this","_preTime","_itemsIndex","_seekingIndex","_startTimeSet","setParameters","setOptions","createTimeline","_container","getElementById","_items","sort","pre","next","start","audioElem","timelineColor","isShowStartTime","_audioElem","getElementsByTagName","_timelineColor","_isShowStartTime","_createTimeline","that","fragment","createDocumentFragment","timeline","createElement","pointer","ul","item","span","title","push","_item","addEventListener","play","currentTime","setTimeout","className","appendChild","createTextNode","style","color","id","Math","abs","_setPointerPosition","pause","clearTimeout","removeAttribute","index","getElementsByClassName","item_h","offsetHeight","children","item_len","top","currentSrcInterval","setInterval","currentSrc","clearInterval","match"],"mappings":"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","file":"PodPicker.min.js","sourcesContent":["/*!\n * Pod Picker - A Podcast Timeline Generator\n * https://github.com/RoberMac/PodPicker\n *\n * Copyright (c) 2015 RoberTu <robertu0717@gmail.com>\n * @license MIT\n * @version v0.2.4\n */\n\n'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n;(function (window, document) {\n\n    'use strict';\n\n    /**\n     * Determines if a value is `undefined / string / boolean / array / object / hex color / timeString`\n     *\n     * @param {Any} value  The value need to be determined\n     * @return {Boolean}\n     */\n    var isUndefined = function isUndefined(value) {\n        return typeof value === 'undefined';\n    },\n        isString = function isString(value) {\n        return typeof value === 'string';\n    },\n        isBoolean = function isBoolean(value) {\n        return typeof value === 'boolean';\n    },\n        isArray = function isArray(value) {\n        return value.constructor === Array;\n    },\n        isObject = function isObject(value) {\n        return value.constructor === Object;\n    },\n        isHexColor = function isHexColor(value) {\n        return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(value);\n    },\n        isTimeString = function isTimeString(value) {\n        return /^(?:(?:([01]?\\d|2[0-3]):)?([0-5]?\\d):)?([0-5]?\\d)$/.test(value);\n    };\n\n    /**\n     * Throw Error\n     *\n     * @param {String} ERROR_MSG  Error message\n     */\n    var throwError = function throwError(type, msg) {\n        switch (type) {\n            case 'type':\n                throw new TypeError(msg);\n                break;\n            default:\n                throw new Error(msg);\n        }\n    };\n\n    /**\n     * Error Messages\n     *\n     */\n    var ERROR_MSG = {\n        // `container` parameter\n        container_param: 'Pod Picker: `container` parameter is required',\n        container_type: 'Pod Picker: `container` parameter must be a string',\n        container_elem: 'Pod Picker: `container` parameter is not related to an existing ID',\n        // `items` parameter\n        items_param: 'Pod Picker: `items` parameter is required',\n        items_type: 'Pod Picker: `items` parameter must be an array',\n        items_empty: 'Pod Picker: `items` parameter cannot be an empty array',\n        // `options` parameter\n        options_type: 'Pod Picker: `options` parameter must be an object',\n        options_audioElem_type: 'Pod Picker: `options.audioElem` must be a string',\n        options_timelineColor_type: 'Pod Picker: `options.timelineColor` must be a string',\n        options_isShowStartTime_type: 'Pod Picker: `options.isShowStartTime` must be a boolean',\n        options_timelineColor_type_value: 'Pod Picker: `options.timelineColor` must be a hex color',\n        // others\n        audioFile_format: 'Pod Picker: does not support MP3 file format',\n        start_format: 'Pod Picker: `start` time string must be \"hh:mm:ss\", \"mm:ss\" or \"ss\" format'\n    };\n\n    /**\n     * Convert time string to seconds\n     *\n     * @param {String} timeString  A time string \n     * @return {Number} seconds\n     */\n    var convertTime = function convertTime(timeString) {\n        // Check time string\n        isTimeString(timeString) ? null : throwError('default', ERROR_MSG.start_format);\n\n        var timeArray = timeString.split(':'),\n            len = timeArray.length;\n\n        switch (len) {\n\n            case 1:\n                return timeArray[0] * 1;\n                break;\n            case 2:\n                return timeArray[0] * 60 + timeArray[1] * 1;\n                break;\n            case 3:\n                return timeArray[0] * 60 * 60 + timeArray[1] * 60 + timeArray[2] * 1;\n                break;\n            default:\n                throwError('default', ERROR_MSG.start_format);\n        }\n    };\n\n    var PodPicker = (function () {\n        /**\n         *\n         * @constructor\n         * @this  {PodPicker}\n         * @param {String}    container  Wrapper element's id\n         * @param {Array}     items      Data items\n         * @param {Object}    options    Options\n         *\n         */\n\n        function PodPicker(container, items, options) {\n            _classCallCheck(this, PodPicker);\n\n            // Set internal variables\n            this._preTime = 0;\n            this._itemsIndex = 0;\n            this._seekingIndex = 0;\n            this._startTimeSet = [];\n\n            // Setup\n            this.setParameters(container, items);\n            this.setOptions(options);\n            this.createTimeline();\n        }\n\n        /**\n         * Set Parameters\n         */\n\n        _createClass(PodPicker, [{\n            key: 'setParameters',\n            value: function setParameters(container, items) {\n                /**\n                  * Basic Check\n                  * throw an error if the parameters is invalid\n                  *\n                  */\n                // Check `container` parameter\n                isUndefined(container) ? throwError('default', ERROR_MSG.container_param) : isString(container) ? this._container = document.getElementById(container) : throwError('type', ERROR_MSG.container_type);\n\n                !this._container ? throwError('default', ERROR_MSG.container_elem) : null;\n\n                // Check `items` parameter\n                isUndefined(items) ? throwError('default', ERROR_MSG.items_param) : isArray(items) ? items.length <= 0 ? throwError('default', ERROR_MSG.items_empty) : null : throwError('type', ERROR_MSG.items_type);\n\n                // Sort items array by item object\n                this._items = items.sort(function (pre, next) {\n\n                    var pre = convertTime(pre.start),\n                        next = convertTime(next.start);\n\n                    if (pre > next) {\n                        return 1;\n                    } else if (pre < next) {\n                        return -1;\n                    } else {\n                        return 0;\n                    }\n                });\n            }\n\n            /**\n             * Set Options\n             * Allow options: 'audioElem', 'timelineColor', 'isShowStartTime'\n             *\n             */\n        }, {\n            key: 'setOptions',\n            value: function setOptions(options) {\n\n                // Check `options` parameter\n                !isUndefined(options) && !isObject(options) ? throwError('type', ERROR_MSG.options_type) : null;\n\n                // Check option: 'audioElem'\n                !isUndefined(options.audioElem) && !isString(options.audioElem) ? throwError('type', ERROR_MSG.options_audioElem_type) : null;\n\n                // Check option: 'timelineColor'\n                !isUndefined(options.timelineColor) ? !isString(options.timelineColor) ? throwError('type', ERROR_MSG.options_timelineColor_type) : isHexColor(options.timelineColor) ? null : throwError('type', ERROR_MSG.options_timelineColor_type_value) : null;\n\n                // Check option: 'isShowStartTime'\n                !isUndefined(options.isShowStartTime) && !isBoolean(options.isShowStartTime) ? throwError('type', ERROR_MSG.options_isShowStartTime_type) : null;\n\n                // Set options\n                this._audioElem = options.audioElem ? document.getElementById(options.audioElem) : document.getElementsByTagName('audio')[0], this._timelineColor = options.timelineColor || '#CECECF', this._isShowStartTime = options.isShowStartTime || false;\n            }\n\n            /**\n             * Create the timeline if audio file is not MP3 file format\n             *\n             * For more details, see: \n             *   http://forums.codescript.in/javascript/html5-audio-currenttime-attribute-inaccurate-27606.html\n             *   https://jsfiddle.net/yp3o8cyw/2/\n             *\n             */\n        }, {\n            key: 'createTimeline',\n            value: function createTimeline() {\n                var that = this;\n                var currentSrcInterval = setInterval(function () {\n                    var currentSrc = that._audioElem.currentSrc;\n                    if (currentSrc) {\n                        clearInterval(currentSrcInterval);\n                        currentSrc.match(/\\.mp3/i) ? throwError('default', ERROR_MSG.audioFile_format)\n                        // then create timeline\n                        : _createTimeline();\n                    }\n                }, 10);\n\n                function _createTimeline() {\n                    var items = that._items,\n                        audioElem = that._audioElem;\n\n                    var fragment = document.createDocumentFragment(''),\n                        timeline = document.createElement('div'),\n                        pointer = document.createElement('span'),\n                        ul = document.createElement('ul');\n\n                    for (var i = 0, len = items.length; i < len; i++) {\n\n                        var item = document.createElement('li'),\n                            span = document.createElement('span'),\n                            start = convertTime(items[i].start),\n                            title = that._isShowStartTime ? items[i].start + ' - ' + items[i].title : items[i].title;\n\n                        // Extract all `item` start time and then push it to `that._startTimeSet`\n                        that._startTimeSet.push(start);(function (_item, start) {\n                            // Jump to certain time offsets in `audioElem`\n                            // when user click the item > span element\n                            _item.addEventListener('click', function () {\n                                audioElem.play();\n                                audioElem.currentTime = start;\n                                that._seekingIndex = window.setTimeout(function () {\n                                    document.getElementById('pp-pointer').className = 'seeking';\n                                }, 500);\n                            });\n                        })(span, start);\n\n                        item.className = 'pp-item';\n                        span.appendChild(document.createTextNode(title));\n                        item.appendChild(span);\n                        ul.appendChild(item);\n                    }\n\n                    ul.style.color = that._timelineColor;\n                    pointer.id = 'pp-pointer';\n                    timeline.id = 'pp-timeline';\n                    timeline.appendChild(ul);\n                    timeline.appendChild(pointer);\n                    fragment.appendChild(timeline);\n                    that._container.appendChild(fragment);\n\n                    // Register event handlers to `audioElem` element\n                    audioElem.addEventListener('timeupdate', function () {\n                        // init\n                        var currentTime = audioElem.currentTime,\n                            _startTimeSet = that._startTimeSet,\n                            len = _startTimeSet.length;\n\n                        if (Math.abs(that._preTime - currentTime) > 1) {\n                            // user-triggered\n                            for (var i = 0; i < len; i++) {\n                                _startTimeSet[i + 1] // the last one\n                                ? currentTime >= _startTimeSet[i] && currentTime <= _startTimeSet[i + 1] ? _setPointerPosition(i + 1) : null : currentTime >= _startTimeSet[i] ? _setPointerPosition(i + 1) : null;\n                            }\n                        } else {\n                            // auto-triggered\n                            for (var i = 0; i < len; i++) {\n                                currentTime > _startTimeSet[i] - 1 && currentTime <= _startTimeSet[i] + 1 && that._itemsIndex !== i + 1 ? _setPointerPosition(i + 1) : null;\n                            }\n                        }\n\n                        that._preTime = currentTime;\n                    });\n                    // Seeking\n                    audioElem.addEventListener('seeking', function () {\n                        audioElem.pause();\n                    });\n                    // Seeked\n                    audioElem.addEventListener('seeked', function () {\n                        window.clearTimeout(that._seekingIndex);\n                        audioElem.play();\n                        document.getElementById('pp-pointer').removeAttribute('class');\n                    });\n                }\n                // Set or reset timeline pointer position\n                function _setPointerPosition(index) {\n                    var item = document.getElementsByClassName('pp-item'),\n                        pointer = document.getElementById('pp-pointer'),\n                        item_h = item[0].offsetHeight;\n\n                    // Store current item(Section) index\n                    that._itemsIndex = index;\n                    // Set timeline section style\n                    item[index - 1].children[0].className = 'currentSection';\n                    for (var i = 0, item_len = item.length; i < item_len; i++) {\n                        i !== index - 1 ? item[i].children[0].removeAttribute('class') : null;\n                    }\n                    // Set timeline pointer position\n                    pointer.style.top = index * item_h - item_h / 2 - 6 + 'px';\n                }\n            }\n        }]);\n\n        return PodPicker;\n    })()\n\n    // Browser globals\n    ;\n\n    if (!window.PodPicker) {\n        window.PodPicker = PodPicker;\n    }\n})(window, document);\n\n// Register event handlers to `item` element"],"sourceRoot":"/source/"}